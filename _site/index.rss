<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>

	<title>RobWeychert.com V7</title>
	<description>A work in progress</description>
	<link>https://v7.robweychert.com</link>
	<language>en</language>
	<lastBuildDate>Wed, 08 Jan 2020 08:50:00 -0500</lastBuildDate>
	<pubDate>Wed, 08 Jan 2020 08:50:00 -0500</pubDate>
	
	<item>
		<title>Content priorities</title>
		<description><![CDATA[
			<p>I added a tiny bit of CSS to aid readability by keeping line lengths in check on larger viewports:</p>

		<pre><code>body {
  margin: 0 auto;
  max-width: 75ch;
  padding: 1rem;
}</code></pre>

		<p>When calling the CSS file from the page <code>head</code>, I include a query string based on today’s date, which I’ll update when the CSS is updated. This will let updates get past the browser’s cache.</p>

		<pre><code>&lt;link rel="stylesheet" href="/assets/css/main.css?20200108"&gt;</code></pre>

		<p>Hopefully this small stylistic addition will keep things tidy enough until I properly begin the visual part of the design process. Before I can get to that, though, let’s talk content priorities. From my list of reasons for the V7 redesign in its <a href="https://v7.robweychert.com/blog/v7-introduction/">introductory post</a>:</p>

		<blockquote>
			<ul>
				<li><strong>Timeline:</strong> The blog on the current version of my site, V6, <a href="https://v6.robweychert.com/blog/">collects</a> most of what I’ve written for public consumption since 2001 across nearly 40 different sources. I’d like to expand that to include even more sources and content types, collecting virtually everything I’ve shared online in one sprawling, sortable/filterable timeline.</li>
				<li><strong>Projects:</strong> I’ve made a lot of cool things personally and professionally over the past few years, announced their launches, and written about why and how they were made, but I still need an easily browsable place to collect and share that work.</li>
			</ul>
		</blockquote>

		<p>The timeline is listed first because it’s the more complex of the two, but projects are actually a higher priority.</p>

		<p>As noted above, a version of the timeline already exists in V6, and while I want to rethink its structure a bit for V7, most of its substance is already in place. Whatever additions are made can be made post-launch if necessary. In the meantime, most of those additions (e.g. tweets and Flickr photos) are for now easily found and browsed elsewhere online, so their inclusion isn’t all that urgent.</p>

		<p>Projects, on the other hand, are currently Easter eggs at best. They’re out there, and you might be able to find them if you’re looking for them, but you’re unlikely to stumble upon them, and they can’t be seen in aggregate as a body of work. Compared to the timeline additions, most of which are old and vary widely in terms of value and substance, the projects’ inclusion is a high priority, because they’re recent and substantial and they represent how I’m spending a lot of my time, so I want them to be much more visible.</p>

		<p>So those are my high-level content priorities for V7. Almost the entirety of the site’s content will fall within one of these two areas, so their structure is the site’s structure. In the next post, I’ll get into my ideas for that structure and the challenges they present.</p>

		]]></description>
		<link>https://v7.robweychert.com/blog/2020/01/v7-content-priorities/</link>
		<guid>https://v7.robweychert.com/blog/2020/01/v7-content-priorities/</guid>
		<pubDate>Wed, 08 Jan 2020 08:50:00 -0500</pubDate>
	</item>
	
	<item>
		<title>The “viewport” meta tag</title>
		<description><![CDATA[
			<p>The first thing I did when setting up this new version of my site was to put together some minimum viable HTML templates. Here’s the blog post template:</p>

		<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;

&lt;head&gt;
  &lt;meta charset="utf-8"&gt;
  &lt;title&gt;&lt;!--POST TITLE--&gt; | RobWeychert.com V7&lt;/title&gt;
  &lt;meta name="description" content="&lt;!--POST DESCRIPTION--&gt;"&gt;
  &lt;link rel="alternate" type="application/rss+xml" title="RobWeychert.com V7" href="/index.rss"&gt;
&lt;/head&gt;

&lt;body&gt;

  &lt;header&gt;
    &lt;h1&gt;&lt;a href="/"&gt;RobWeychert.com V7&lt;/a&gt;&lt;/h1&gt;
    &lt;nav&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href="/blog/"&gt;Blog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="/index.rss"&gt;RSS&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/nav&gt;
  &lt;/header&gt;

  &lt;aside&gt;I’m redesigning my site in public from the ground up, so if it looks undercooked, that’s why! Check out the &lt;a href="/blog/"&gt;blog&lt;/a&gt; to follow the process step by step, or visit the more polished &lt;a href="https://v6.robweychert.com/"&gt;current version&lt;/a&gt; of the site.&lt;/aside&gt;

  &lt;main&gt;
    &lt;header&gt;
      &lt;h2&gt;&lt;!--POST TITLE--&gt;&lt;/h2&gt;
      &lt;p&gt;&lt;!--POST DESCRIPTION--&gt;&lt;/p&gt;
      &lt;time datetime="&lt;!--YYYY-MM-DD--&gt;"&gt;&lt;!--POST DATE--&gt;&lt;/time&gt;
    &lt;/header&gt;

    &lt;!--POST CONTENT--&gt;

  &lt;/main&gt;

  &lt;nav aria-label="Secondary"&gt;
    &lt;h2&gt;Most recent blog posts&lt;/h2&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;a href="/blog/&lt;!--YYYY/MM/POST TITLE SLUG--&gt;/"&gt;
          &lt;h3&gt;&lt;!--POST TITLE--&gt;&lt;/h3&gt;
          &lt;p&gt;&lt;!--POST DESCRIPTION--&gt;&lt;/p&gt;
          &lt;time datetime="&lt;!--YYYY-MM-DD--&gt;"&gt;&lt;!--POST DATE--&gt;&lt;/time&gt;
        &lt;/a&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/nav&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre>

	<p>The site is, for the time being, made exclusively of HTML, so I didn’t bother to test it on different devices since browsers would apply their own default styles. But then I noticed it was doing this on iOS:</p>

	<figure>
		<img src="/assets/images/2020-01-04-ios-shrunken.png" width="300" alt="Screenshot of a shrunken blog post in iOS Firefox">
		<figcaption>iOS shrinks the page, treating it as if it were designed specifically for desktop browsers.</figcaption>
	</figure>

	<p>It turned out my minimum viable HTML wasn’t quite viable after all! I had left out the <code>&lt;meta name="viewport"&gt;</code> tag from the <code>&lt;head&gt;</code>. It’s been part of my HTML boilerplate for years, and I’ve always generally understood what it does, but this incident prompted me to learn a little more. After digging around a bit, I found an in-depth <a href="https://www.quirksmode.org/mobile/viewports.html">two</a>-<a href="https://www.quirksmode.org/mobile/viewports2.html">part</a> post from Peter-Paul Koch on how browser viewports work with device pixels and CSS pixels. I also found Apple’s <a href="https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/UsingtheViewport/UsingtheViewport.html">documentation</a> for configuring the viewport using <code>&lt;meta name="viewport"&gt;</code>. Both of those posts appear to have been published around 2010, but much of the information is still relevant.</p>

	<p>Due to the complexity of the subject, those posts are illuminating if not quite elucidating, but here’s the gist: When the iPhone was first released, Apple proudly trumpeted its ability to bring mobile users the “real” internet: not the stripped down mobile versions of websites that were de rigeur at the time (on the rare occasions developers even bothered making them), but the “real” versions that you would see on a desktop computer. It rendered these desktop-optimized sites by assuming they were approximately 980 pixels wide and shrinking everything to fit on the iPhone’s screen, which was 320 pixels wide. The user could then zoom and pan the page to get a closer look. This was a reasonable compromise, but it meant that if anyone tried to optimize a site’s design for a mobile device, that page would likewise be shrunken when rendered on the iPhone. So Apple created the <code>&lt;meta name="viewport"&gt;</code> tag, which would give developers control over how their work was rendered on the iPhone. Other mobile browser makers subsequently adopted it, making it a <a href="https://drafts.csswg.org/css-device-adapt/#viewport-meta">de facto standard</a>.</p>

	<p>Fast-forward more than a decade and no one thinks of the desktop as the default way to experience the web anymore, so I thought I might be able to get away with omitting <code>&lt;meta name="viewport"&gt;</code>. Apparently not! Maybe someday. In the meantime, you can see the aforementioned Apple <a href="https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/UsingtheViewport/UsingtheViewport.html">documentation</a> for details on how to use <code>&lt;meta name="viewport"&gt;</code>, but this should cover you in most cases:</p>

	<pre><code>&lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;</code></pre>

	<figure>
		<img src="/assets/images/2020-01-04-ios-correct.png" width="300" alt="Screenshot of a correctly rendered blog post in iOS Firefox">
		<figcaption>No more shrinkage!</figcaption>
	</figure>

		]]></description>
		<link>https://v7.robweychert.com/blog/2020/01/v7-viewport-meta-tag/</link>
		<guid>https://v7.robweychert.com/blog/2020/01/v7-viewport-meta-tag/</guid>
		<pubDate>Wed, 04 Jan 2020 17:00:00 -0500</pubDate>
	</item>
	
	<item>
		<title>Introduction</title>
		<description><![CDATA[
			<p>Welcome to RobWeychert.com V7! There are a number of new things I want to try with my site, from structure to aesthetics to code, and so it’s time to begin a fresh redesign. Inspired by my friends <a href="https://2020.destroytoday.com/">Jonnie</a> and <a href="https://redesign.frankchimero.com/">Frank</a>, I’ve decided to do it in public from the ground up. I’m starting with bare-bones HTML and as the design process unfolds, each step will be reflected on the site in real time and documented with a succinct blog post. I’m hoping to post at least once a week, but that will probably fluctuate.</p>

		<p>Here are some of the core ideas driving the redesign, which I’ll flesh out further in subsequent posts:</p>

		<ul>
			<li><strong>Timeline:</strong> The blog on the current version of my site, V6, <a href="https://v6.robweychert.com/blog/">collects</a> most of what I’ve written for public consumption since 2001 across nearly 40 different sources. I’d like to expand that to include even more sources and content types, collecting virtually everything I’ve shared online in one sprawling, sortable/filterable timeline.</li>
			<li><strong>Projects:</strong> I’ve made a lot of cool things personally and professionally over the past few years, announced their launches, and written about why and how they were made, but I still need an easily browsable place to collect and share that work.</li>
			<li><strong>Overprint:</strong> The basis of the aesthetic I want to explore.</li>
			<li><strong>Tools and tech:</strong> My approach to layout and style is evolving with the help of expanding browser support for CSS specs like Flexbox, Grid, and Custom Properties. I’m also considering moving away from Jekyll to another static site generator as well as updating my deployment method from FTP sync to something more modern.</li>
		</ul>

		<p>More to come. Stay tuned!</p>

		]]></description>
		<link>https://v7.robweychert.com/blog/2020/01/v7-introduction/</link>
		<guid>https://v7.robweychert.com/blog/2020/01/v7-introduction/</guid>
		<pubDate>Wed, 01 Jan 2020 15:00:00 -0500</pubDate>
	</item>
	
</channel>
</rss>